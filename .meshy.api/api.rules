Introduction:
API Reference
This is the API reference for programmatically interacting with Meshy.

Overview
The Meshy API is a RESTful API that allows you to programmatically interact with Meshy. You can use it to create and get tasks generated by Meshy in your own applications.

BASE URL for Meshy API endpoints
https://api.meshy.ai

Copy
Copied!
Quick Start
There are a few resources to help you get started with Meshy API:

You need to create a Meshy account before using Meshy API. Read the Creating a Meshy Account section to learn how to create a Meshy account.

You need an API key to get verifed. Read the Creating API Keys section to learn how to create an API key.

Read the Using API Keys section to learn how to authenticate your requests with the API keys.

Get familiar with the Text to Texture API to learn how to generate textures from text.

Pricing
Meshy is a pay-as-you-go service. You need to purchase API usage based on your application's need before using Meshy API. You can purchase API usage from the API settings page.

The pricing for Meshy API is as follows:

API	Price per call
Text to Texture	5 credits
Text to 3D Beta (Model)	2 credits
Text to 3D Beta (Textured)	5 credits
Text to voxel	5 credits
Image to 3D	5 credits
The API pricing is still in beta, and we may change the pricing in the future. If you need more API usage with a lower price, please contact us at support@meshy.ai.

Security
We take security very seriously at Meshy, and we work hard to ensure that Meshy API is secure. We hope your data and your users' data is safe with us. Here are some high-level guidelines to help you keep your data and requests safe when using Meshy API, but please also make sure to follow the guidelines practiced at your team or workplace.

Transport Layer Security
While your data is encrypted at rest once it's stored in Meshy, Meshy API uses and enforces TLS, to encrypt data in transit. It means that all requests to and from Meshy API are sent over HTTPS, and any request made over HTTP will get an 301 Moved Permanently status code. Although not recommended, in some cases, if you have to talk to HTTP, you need to explicity tell your HTTP client to follow HTTP to HTTPS redirections. Here are some examples:

Follow HTTP to HTTPS redirections
cURL
Python
# use -L to follow HTTP to HTTPS redirections
curl -L -X 'POST' \
  http://api.meshy.ai/v1/text-to-texture

Copy
Copied!
API Key Safety
Please note that even Meshy team members cannot view or recover revoked API keys for you!

Once minted, API keys are not visible in the dashboard anymore, so please download and keep it safe and securely since anyone who obtains it can use it to talk to Meshy API on your behalf. If you believe your API key has been compromised, you can revoke it at any time from the dashboard, once revoked, it will no longer be valid.

Security Disclosure
If you believe you've discovered a security issue in Meshy API, please get in touch with us. We appreciate your responsible disclosure and will make every effort to acknowledge your contributions.

Rate Limiting
Meshy API is rate limited to prevent abuse that could degrade the service quality for other users. The rate limit is applied to each IP address, and the default rate limit is 20 requests per second. If you need a higher rate limit quota, please get in touch with us.

Storage
Please note that any models generated through our API will only be retained for a maximum of 3 days. After this period, the models will be automatically deleted from our servers. We kindly ask for your understanding and recommend downloading and storing your models locally if you need them for a longer duration.

Authentication:

Authentication
Using the Meshy API requires authentication. This guide will show you how to create an account and API keys.

Creating a Meshy Account
Meshy API requires you to have a Meshy account to create and manage API keys. If a request is made to the API without an API key, the API will respond with an invalid credentials error.

You can create a Meshy account by visiting the Meshy website and sign up.

Creating API Keys
Once you have created a Meshy account, you can create API keys by visiting the API page.

You can create multiple API keys for different purposes. For example, you can create one API key for your iOS app and another for your web app. The usage of each API key is tracked separately, and you can revoke them at any time.

To create an API key, click on the Create API Key button on the API page, and then enter a name for your API key.

Once you have created an API key, you will be shown the API key value. You can copy the API key value and store it in a secure location.

You will not be able to see the API key value again.

Using API Keys
Once you have created an API key, you can use it to authenticate your requests to the Meshy API. You can pass your API key to the API in the Authorization header, an example header is shown below.

{
  "Authorization": "Bearer msy_sOmEbOgUsApIkEyFoReXaMpLe1234567890"
}

Copy
Copied!
The Bearer   prefix in the header value is mandatory to interact with the Meshy API programatically. You can learn more about it at IETF RFC 6750

Errors:
Errors
In this guide, we will talk about what happens when something goes wrong while you work with the Meshy API.

Meshy leverages conventional HTTP response codes to indicate the success or failure of an API request. Generally, codes in the 2xx range indicate success; codes in the 4xx range indicate an error that failed given the information provided (e.g., a required parameter was missing, an invalid model was provided, etc.); codes in the 5xx range indicate an internal error with Meshy's servers, which should be rare.

Status Codes
Here is a list of the different categories of status codes returned by the Meshy API. Use these to understand if a request was successful.

Name
2xx
Description
A 2xx status code indicates a successful response.

Name
200 - OK
Description
By default if everything worked as expected a 200 status code will be returned.

Name
202 - Accepted
Description
Your request has been accepted for processing, but the processing has not been completed. This is a non-committal response from Meshy API. For example, a request to create a new Text to Texture task will return a 202 status code.

Name
4xx
Description
A 4xx status code indicates a client error â€” this means it's a you problem.

Name
400 - Bad Request
Description
The request was unacceptable, often due to missing a mandatory parameter or one of the parameters was malformed.

Name
401 - Unauthorized
Description
No valid API key provided or the API key provided is not authorized to access the Meshy API endpoint.

Name
402 - Payment Required
Description
Insufficient funds in the account associated with the provided API key.

Name
404 - Not Found
Description
The requested resource doesn't exist. For example, when you try to retrieve a task by its ID but provided an invalid ID, you will get a 404 status code.

Name
429 - Too Many Requests
Description
Too many requests hit the Meshy API too quickly. Please refer to the Rate Limiting guide for details.

Name
5xx
Description
A 5xx status code indicates a server error, we hope you won't be seeing these - but if you do, please contact us for help!

Error Response
Whenever a request is unsuccessful, the Meshy API will return an error response with an error type and message. You can use this information to understand better what has gone wrong and how to fix it. Most of the error messages should be helpful and actionable, they also share a common structure:

Name
message
Type
string
Description
A short description message of the error.

Example Response with 400 - Bad Request status code
{
  "message": "Invalid model file extension: .3dm"
}

Text to Texture:
Text To Texture API
Text To Texture API is a feature that allows you to integrate Meshy's Text to Texture capabilities into your own application. In this section, you'll find all the information you need to get started with this API.

The Text to Texture Task Model
The Text to Texture Task model is a work unit that Meshy keeps track of to generate a 3D texture from a text input. The model has the following properties:

Properties
Name
id
Type
string
Description
Unique identifier for the task. While we use a k-sortable UUID for task ids as the implementation detail, you should not make any assumptions about the format of the id.

Name
model_url
Type
string
Description
Downloadable URL to the textured 3D model file generated by Meshy.

This field is deprecated and will be removed in the upcoming releases, prefer to use model_urls instead.

Name
model_urls
Type
object
Description
Downloadable URL to the textured 3D model file generated by Meshy.

Name
glb
Type
string
Description
Downloadable URL to the GLB file.

Name
fbx
Type
string
Description
Downloadable URL to the FBX file.

Name
usdz
Type
string
Description
Downloadable URL to the USDZ file.

Name
object_prompt
Type
string
Description
This is unmodified object_prompt that was used to create the task.

Name
style_prompt
Type
string
Description
This is unmodified style_prompt that was used to create the task.

Name
art_style
Type
string
Description
This is unmodified art_style that was used to create the task.

Name
negative_prompt
Type
string
Description
This is unmodified negative_prompt that was used to create the task.

Name
thumbnail_url
Type
string
Description
Downloadable URL to the thumbnail image of the model file.

Name
progress
Type
integer
Description
Progress of the task. If the task is not started yet, this property will be 0. Once the task has succeeded, this will become 100.

Name
started_at
Type
timestamp
Description
Timestamp of when the task was started, in miliseconds. If the task is not started yet, this property will be 0.

A timestamp represents the number of milliseconds elapsed since January 1, 1970 UTC, following the RFC 3339 standard. For example, Friday, September 1, 2023 12:00:00 PM GMT is represented as 1693569600000. This applies to all timestamps in Meshy API.

Name
created_at
Type
timestamp
Description
Timestamp of when the task was created, in miliseconds.

Name
expires_at
Type
timestamp
Description
Timestamp of when the task result expires, in miliseconds.

Name
finished_at
Type
timestamp
Description
Timestamp of when the task was finished, in miliseconds. If the task is not finished yet, this property will be 0.

Name
status
Type
string
Description
Status of the task. Possible values are one of PENDING, IN_PROGRESS, SUCCEEDED, FAILED, EXPIRED.

Name
task_error
Type
object
Description
Error object that contains the error message if the task failed. The message property should be empty if the task succeeded.

Name
message
Type
string
Description
Detailed error message.

Name
texture_urls
Type
array
Description
An array of texture URL objects that are generated from the task. Normally this only contains one texture URL object. Each texture URL has the following properties:

Name
base_color
Type
string
Description
Downloadable URL to the base color map image.

Name
metallic
Type
string
Description
Downloadable URL to the metallic map image.

If the task is created with enable_pbr: false, this property will be omitted.

Name
normal
Type
string
Description
Downloadable URL to the normal map image.

If the task is created with enable_pbr: false, this property will be omitted.

Name
roughness
Type
string
Description
Downloadable URL to the roughness map image.

If the task is created with enable_pbr: false, this property will be omitted.

Name
preceding_tasks
Type
integer
Description
The count of preceding tasks.

This property only presents when the task status is PENDING.

Example Text to Texture Task Model
{
  "id": "018a210d-8ba4-705c-b111-1f1776f7f578",
  "model_urls": {
    "glb": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.glb?Expires=***",
    "fbx": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.fbx?Expires=***",
    "usdz": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.usdz?Expires=***"
  },
  "object_prompt": "a monster mask",
  "style_prompt": "red fangs, Samurai outfit that fused with japanese batik style",
  "art_style": "realistic",
  "negative_prompt": "low quality, low resolution, low poly, ugly",
  "thumbnail_url": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/preview.png?Expires=***",
  "progress": 1,
  "started_at": 1692771667037,
  "created_at": 1692771650657,
  "expires_at": 1692771679037,
  "finished_at": 1692771669037,
  "status": "SUCCEEDED",
  "texture_urls": [
    {
      "base_color": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/texture_0.png?Expires=***",
      "metallic": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/texture_0_metallic.png?Expires=XXX",
      "normal": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/texture_0_roughness.png?Expires=XXX",
      "roughness": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/texture_0_normal.png?Expires=XXX"
    }
  ]
}

Copy
Copied!
POST
/v1/text-to-texture
Create a Text to Texture Task
This endpoint allows you to create a new Text to Texture task. Refer to The Text to Texture Task Model to see which properties are included with Text to Texture task object.

Parameters
Required attributes
Name
model_url
Type
string
Description
Downloadable URL to the 3D model for Meshy to texture. Currently, we support .fbx / .obj / .stl / .gltf / .glb models. Please also check the Model Requirements subsection in Upload Your Model for any additional requirements.

Meshy will validate and only accept 3D models in supported formats, passing a unsupported format with model_url will result in a 400 error.

Name
object_prompt
Type
string
Description
Describe what kind of object the 3D model is.

Name
style_prompt
Type
string
Description
Describe your desired style of the object.

Optional attributes
Name
enable_original_uv
Type
boolean
Description
Use the original UV of the model instead of generating new UVs. If the model has no original UV, the quality of the output might not be as good. Default to true if not specified.

Name
enable_pbr
Type
boolean
Description
Generate PBR Maps (metallic, roughness, normal) in addition to the base color. Default to true if not specified.

Name
negative_prompt
Type
string
Description
Describe what the texture should not look like.

Name
resolution
Type
string
Description
Specify the resolution of generated textures. Available values:

1024
2048
4096
Name
art_style
Type
string
Description
Describe your desired art style of the object. Default to realistic if not specified. Available values:

realistic: Realistic style
fake-3d-cartoon: 2.5D Cartoon style
japanese-anime: Japanese Anime style
cartoon-line-art: Cartoon Line Art style
realistic-hand-drawn: Realistic Hand-drawn style
fake-3d-hand-drawn: 2.5D Hand-drawn style
oriental-comic-ink: Oriental Comic Ink style
Returns
The result property of the response contains the task id of the newly created Text to Texture task.

Request
cURL
NodeJS
Python
POST
/v1/text-to-texture
curl https://api.meshy.ai/v1/text-to-texture \
  -H "Authorization: Bearer ${YOUR_API_KEY}" \
  -H 'Content-Type: application/json' \
  -d '{
    "model_url": "https://cdn.meshy.ai/model/example_model_2.glb",
    "object_prompt": "a monster mask",
    "style_prompt": "red fangs, Samurai outfit that fused with japanese batik style",
    "enable_original_uv": true,
    "enable_pbr": true,
    "resolution": "1024",
    "negative_prompt": "low quality, low resolution, low poly, ugly"
  }'

Copy
Copied!
Response
{
  "result": "018a210d-8ba4-705c-b111-1f1776f7f578"
}

Copy
Copied!
GET
/v1/text-to-texture/:id
Retrieve a Text to Texture Task
This endpoint allows you to retrieve a Text to Texture task given a valid task id. Refer to The Text to Texture Task Model to see which properties are included with Text to Texture task object.

Parameters
Name
id
Type
path
Description
Unique identifier for the Text to Texture task to retrieve.

Returns
The response contains the Text to Texture task object. Check The Text to Texture Task Model section for details.

Request
cURL
NodeJS
Python
GET
/v1/text-to-texture/018a210d-8ba4-705c-b111-1f1776f7f578
curl https://api.meshy.ai/v1/text-to-texture/018a210d-8ba4-705c-b111-1f1776f7f578 \
  -H "Authorization: Bearer ${YOUR_API_KEY}"

Copy
Copied!
Response
{
  "id": "018a210d-8ba4-705c-b111-1f1776f7f578",
  "model_urls": {
    "glb": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.glb?Expires=***",
    "fbx": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.fbx?Expires=***",
    "usdz": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.usdz?Expires=***"
  },
  "thumbnail_url": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/preview.png?Expires=***",
  "object_prompt": "a monster mask",
  "style_prompt": "red fangs, Samurai outfit that fused with japanese batik style",
  "art_style": "realistic",
  "negative_prompt": "low quality, low resolution, low poly, ugly",
  "progress": 100,
  "started_at": 1692771667037,
  "created_at": 1692771650657,
  "expires_at": 1692771679037,
  "finished_at": 1692771669037,
  "status": "SUCCEEDED",
  "texture_urls": [
    {
      "base_color": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/texture_0.png?Expires=***",
      "metallic": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/texture_0_metallic.png?Expires=XXX",
      "normal": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/texture_0_roughness.png?Expires=XXX",
      "roughness": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/texture_0_normal.png?Expires=XXX"
    }
  ]
}

Text to 3D Beta:
Text To 3D Beta API
Text To 3D API is a feature that allows you to integrate Meshy's Text to 3D capabilities into your own application. In this section, you'll find all the information you need to get started with this API.

The Text to 3D Task Model
The Text to 3D Task model is a work unit that Meshy keeps track of to generate a 3D model from a text input. The model has the following properties:

Properties
Name
id
Type
string
Description
Unique identifier for the task. While we use a k-sortable UUID for task ids as the implementation detail, you should not make any assumptions about the format of the id.

Name
model_urls
Type
object
Description
Downloadable URL to the textured 3D model file generated by Meshy.

Name
glb
Type
string
Description
Downloadable URL to the GLB file.

Name
fbx
Type
string
Description
Downloadable URL to the FBX file.

Name
usdz
Type
string
Description
Downloadable URL to the USDZ file.

Name
obj
Type
string
Description
Downloadable URL to the OBJ file.

Name
mtl
Type
string
Description
Downloadable URL to the MTL file.

Name
prompt
Type
string
Description
This is unmodified prompt that was used to create the task.

Name
negative_prompt
Type
string
Description
This is unmodified negative_prompt that was used to create the task.

Name
art_style
Type
string
Description
This is unmodified art_style that was used to create the preview task.

Name
texture_richness
Type
string
Description
This is unmodified texture_richness that was used to create the refine task.

Name
thumbnail_url
Type
string
Description
Downloadable URL to the thumbnail image of the model file.

Name
video_url
Type
string
Description
Downloadable URL to the preview video.

Name
progress
Type
integer
Description
Progress of the task. If the task is not started yet, this property will be 0. Once the task has succeeded, this will become 100.

Name
started_at
Type
timestamp
Description
Timestamp of when the task was started, in miliseconds. If the task is not started yet, this property will be 0.

A timestamp represents the number of milliseconds elapsed since January 1, 1970 UTC, following the RFC 3339 standard. For example, Friday, September 1, 2023 12:00:00 PM GMT is represented as 1693569600000. This applies to all timestamps in Meshy API.

Name
created_at
Type
timestamp
Description
Timestamp of when the task was created, in miliseconds.

Name
finished_at
Type
timestamp
Description
Timestamp of when the task was finished, in miliseconds. If the task is not finished yet, this property will be 0.

Name
status
Type
string
Description
Status of the task. Possible values are one of PENDING, IN_PROGRESS, SUCCEEDED, FAILED, EXPIRED.

Name
task_error
Type
object
Description
Error object that contains the error message if the task failed. The message property should be empty if the task succeeded.

Name
message
Type
string
Description
Detailed error message.

Name
texture_urls
Type
array
Description
An array of texture URL objects that are generated from the task. Normally this only contains one texture URL object. Each texture URL has the following properties:

If the task is created with art_style: "voxel", this property will be an empty list.

Name
base_color
Type
string
Description
Downloadable URL to the base color map image.

Name
preceding_tasks
Type
integer
Description
The count of preceding tasks.

The value of this field is meaningful only if the task status is PENDING.

Example Text to 3D Task Model
{
  "id": "018a210d-8ba4-705c-b111-1f1776f7f578",
  "model_urls": {
    "glb": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.glb?Expires=***",
    "fbx": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.fbx?Expires=***",
    "usdz": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.usdz?Expires=***",
    "obj": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.obj?Expires=***",
    "mtl": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.mtl?Expires=***"
  },
  "thumbnail_url": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/preview.png?Expires=***",
  "prompt": "a monster mask",
  "art_style": "realistic",
  "negative_prompt": "low quality, low resolution, low poly, ugly",
  "progress": 1,
  "seed": 1234,
  "started_at": 1692771667037,
  "created_at": 1692771650657,
  "finished_at": 1692771669037,
  "status": "SUCCEEDED",
  "texture_urls": [
    {
      "base_color": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/texture_0.png?Expires=***"
    }
  ]
}

Copy
Copied!
POST
/v2/text-to-3d
Create a Text to 3D Preview Task
This endpoint allows you to create a new Text to 3D Preview task. Refer to The Text to 3D Task Model to see which properties are included with Text to 3D task object.

Parameters
Required attributes
Name
mode
Type
string
Description
This field should be set to "preview" when creating a preview task.

Name
prompt
Type
string
Description
Describe what kind of object the 3D model is.

Optional attributes
Name
negative_prompt
Type
string
Description
Describe what the model should not look like.

Name
art_style
Type
string
Description
Describe your desired art style of the object. Default to realistic if not specified. Available values:

realistic: Realistic style
cartoon: Cartoon style
low-poly: Low Poly style
sculpture: Sculpture style
pbr: PBR style
When you are using meshy-4 ai_model, only realistic, sculpture and pbr are available.

Name
seed
Type
integer
Description
When you use the same prompt and seed, you will generate the same result.

Name
ai_model
Type
string
Description
ID of the model to use. Default to meshy-4 if not specified. Available values:

meshy-4
meshy-3-turbo
meshy-3
The refine task will use the same model as the corresponding preview task.

Name
topology
Type
string
Description
Specify the topology of the generated model. Default to triangle if not specified. Available values:

quad: Generate a quad-dominant mesh.
triangle: Generate a decimated triangle mesh.
This parameter is effective only if ai_model is set to meshy-4.

Name
target_polycount
Type
integer
Description
Specify the target number of polygons in the generated model. The actual number of polygons may deviate from the target depending on the complexity of the geometry.

The valid value range varies depending on the user tier:

Premium users: 3,000 to 100,000 (inclusive)
Free users: 10,000 to 30,000 (inclusive)
Default to 30,000 if not specified.

This parameter is effective only if ai_model is set to meshy-4.

Returns
The result property of the response contains the task id of the newly created Text to 3D task.

Request
cURL
NodeJS
Python
POST
/v2/text-to-3d
curl https://api.meshy.ai/v2/text-to-3d \
  -H 'Authorization: Bearer ${YOUR_API_KEY}' \
  -H 'Content-Type: application/json' \
  -d '{
  "mode": "preview",
  "prompt": "a monster mask",
  "art_style": "realistic",
  "negative_prompt": "low quality, low resolution, low poly, ugly"
}'

Copy
Copied!
Response
{
  "result": "018a210d-8ba4-705c-b111-1f1776f7f578"
}

Copy
Copied!
POST
/v2/text-to-3d
Create a Text to 3D Refine Task
This endpoint allows you to create a new Text to 3D Refine task.

Parameters
Required attributes
Name
mode
Type
string
Description
This field should be set to "refine" when creating a preview task.

Name
preview_task_id
Type
string
Description
The corresponding preview task id. The status of the given preview task must be SUCCEEDED.

Optional attributes
Name
texture_richness
Type
string
Description
Describe your desired texture richness. Available values:

high
medium
low
none
The default value of texture_richness depends on the corresponding preview task's art style:

high for realistic
medium for cartoon
none for low-poly
This parameter has no effect when ai_model is set to meshy-4.

Returns
The result property of the response contains the task id of the newly created Text to 3D task.

Request
cURL
NodeJS
Python
POST
/v2/text-to-3d
curl https://api.meshy.ai/v2/text-to-3d \
  -H 'Authorization: Bearer ${YOUR_API_KEY}' \
  -H 'Content-Type: application/json' \
  -d '{
  "mode": "refine",
  "preview_task_id": "018a210d-8ba4-705c-b111-1f1776f7f578"
}'

Copy
Copied!
Response
{
  "result": "018a210d-8ba4-705c-b111-1f1776f7f578"
}

Copy
Copied!
GET
/v2/text-to-3d/:id
Retrieve a Text to 3D Task
This endpoint allows you to retrieve a Text to 3D task given a valid task id. Refer to The Text to 3D Task Model to see which properties are included with Text to 3D task object.

Parameters
Name
id
Type
path
Description
Unique identifier for the Text to 3D task to retrieve.

Returns
The response contains the Text to 3D task object. Check The Text to 3D Task Model section for details.

Request
cURL
NodeJS
Python
GET
/v2/text-to-3d/018a210d-8ba4-705c-b111-1f1776f7f578
curl https://api.meshy.ai/v2/text-to-3d/018a210d-8ba4-705c-b111-1f1776f7f578 \
-H "Authorization: Bearer ${YOUR_API_KEY}"

Copy
Copied!
Response
{
  "id": "018a210d-8ba4-705c-b111-1f1776f7f578",
  "model_urls": {
    "glb": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.glb?Expires=***",
    "fbx": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.fbx?Expires=***",
    "obj": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.obj?Expires=***",
    "mtl": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.mtl?Expires=***",
    "usdz": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.usdz?Expires=***"
  },
  "thumbnail_url": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/preview.png?Expires=***",
  "prompt": "a monster mask",
  "art_style": "realistic",
  "negative_prompt": "low quality, low resolution, low poly, ugly",
  "progress": 100,
  "started_at": 1692771667037,
  "created_at": 1692771650657,
  "finished_at": 1692771669037,
  "status": "SUCCEEDED",
  "texture_urls": [
    {
      "base_color": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/texture_0.png?Expires=***"
    }
  ]
}

Text to Voxel:
Text To Voxel API
Text To Voxel API is a feature that allows you to integrate Meshy's Text to Voxel capabilities into your own application. In this section, you'll find all the information you need to get started with this API.

The Text to Voxel Task Model
The Text to Voxel Task model is a work unit that Meshy keeps track of to generate a voxel model from a text input. The model has the following properties:

Properties
Name
id
Type
string
Description
Unique identifier for the task. While we use a k-sortable UUID for task ids as the implementation detail, you should not make any assumptions about the format of the id.

Name
model_urls
Type
object
Description
Downloadable URL to the textured 3D model file generated by Meshy.

Name
glb
Type
string
Description
Downloadable URL to the GLB file.

Name
vox
Type
string
Description
Downloadable URL to the VOX file.

Name
prompt
Type
string
Description
This is unmodified prompt that was used to create the task.

Name
negative_prompt
Type
string
Description
This is unmodified negative_prompt that was used to create the task.

Name
thumbnail_url
Type
string
Description
Downloadable URL to the thumbnail image of the model file.

Name
progress
Type
integer
Description
Progress of the task. If the task is not started yet, this property will be 0. Once the task has succeeded, this will become 100.

Name
started_at
Type
timestamp
Description
Timestamp of when the task was started, in miliseconds. If the task is not started yet, this property will be 0.

A timestamp represents the number of milliseconds elapsed since January 1, 1970 UTC, following the RFC 3339 standard. For example, Friday, September 1, 2023 12:00:00 PM GMT is represented as 1693569600000. This applies to all timestamps in Meshy API.

Name
created_at
Type
timestamp
Description
Timestamp of when the task was created, in miliseconds.

Name
finished_at
Type
timestamp
Description
Timestamp of when the task was finished, in miliseconds. If the task is not finished yet, this property will be 0.

Name
status
Type
string
Description
Status of the task. Possible values are one of PENDING, IN_PROGRESS, SUCCEEDED, FAILED, EXPIRED.

Name
voxel_size_shrink_factor
Type
integer
Description
This field is a parameter used to control the voxel size of three-dimensional data. Higher values correspond to smaller voxel sizes. Possible values are one of 8, 4, 2, 1.

Name
task_error
Type
object
Description
Error object that contains the error message if the task failed. The message property should be empty if the task succeeded.

Name
message
Type
string
Description
Detailed error message.

Example Text to Voxel Task Model
{
  "id": "018a210d-8ba4-705c-b111-1f1776f7f578",
  "model_urls": {
    "glb": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.glb?Expires=***",
    "vox": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.vox?Expires=***",
  },
  "thumbnail_url": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/preview.png?Expires=***",
  "prompt": "a monster mask",
  "negative_prompt": "low quality, low resolution, low poly, ugly",
  "progress": 1,
  "seed": 1234,
  "started_at": 1692771667037,
  "created_at": 1692771650657,
  "finished_at": 1692771669037,
  "status": "SUCCEEDED",
  "voxel_size_shrink_factor": 8,
}

Copy
Copied!
POST
/v1/text-to-voxel
Create a Text to Voxel Task
This endpoint allows you to create a new Text to Voxel task. Refer to The Text to Voxel Task Model to see which properties are included with Text to Voxel task object.

Parameters
Required attributes
Name
voxel_size_shrink_factor
Type
integer
Description
This field is a parameter used to control the voxel size of three-dimensional data. Higher values correspond to smaller voxel sizes. Possible values are one of 8, 4, 2, 1.

Name
prompt
Type
string
Description
Describe what kind of object the 3D model is.

Optional attributes
Name
negative_prompt
Type
string
Description
Describe what the model should not look like.

Name
seed
Type
integer
Description
When you use the same prompt and seed, you will generate the same result.

Returns
The result property of the response contains the task id of the newly created Text to Voxel task.

Request
cURL
NodeJS
Python
POST
/v1/text-to-voxel
curl https://api.meshy.ai/v1/text-to-voxel \
-H 'Authorization: Bearer ${YOUR_API_KEY}' \
-H 'Content-Type: application/json' \
-d '{
  "voxel_size_shrink_factor": 1,
  "prompt": "a monster mask",
  "negative_prompt": "low quality, low resolution, low poly, ugly"
}'

Copy
Copied!
Response
{
  "result": "018a210d-8ba4-705c-b111-1f1776f7f578"
}

Copy
Copied!
GET
/v1/text-to-voxel/:id
Retrieve a Text to Voxel Task
This endpoint allows you to retrieve a Text to Voxel task given a valid task id. Refer to The Text to Voxel Task Model to see which properties are included with Text to Voxel task object.

Parameters
Name
id
Type
path
Description
Unique identifier for the Text to Voxel task to retrieve.

Returns
The response contains the Text to Voxel task object. Check The Text to Voxel Task Model section for details.

Request
cURL
NodeJS
Python
GET
/v1/text-to-voxel/018a210d-8ba4-705c-b111-1f1776f7f578
curl https://api.meshy.ai/v1/text-to-voxel/018a210d-8ba4-705c-b111-1f1776f7f578 \
-H "Authorization: Bearer ${YOUR_API_KEY}"

Copy
Copied!
Response
{
  "id": "018a210d-8ba4-705c-b111-1f1776f7f578",
  "model_urls": {
    "glb": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.glb?Expires=***",
    "vox": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.vox?Expires=***",
  },
  "thumbnail_url": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/preview.png?Expires=***",
  "prompt": "a monster mask",
  "negative_prompt": "low quality, low resolution, low poly, ugly",
  "progress": 100,
  "started_at": 1692771667037,
  "created_at": 1692771650657,
  "finished_at": 1692771669037,
  "status": "SUCCEEDED",
  "voxel_size_shrink_factor": 8,
}

Image to 3D:
Image To 3D API
Image To 3D API is a feature that allows you to integrate Meshy's Image To 3D capabilities into your own application. In this section, you'll find all the information you need to get started with this API.

The Image To 3D Task Model
The Image To 3D Task model is a work unit that Meshy keeps track of to generate a 3D model from an image input. The model has the following properties:

Properties
Name
id
Type
string
Description
Unique identifier for the task. While we use a k-sortable UUID for task ids as the implementation detail, you should not make any assumptions about the format of the id.

Name
model_url
Type
string
Description
Downloadable URL to the textured 3D model file generated by Meshy.

This field is deprecated and will be removed in the upcoming releases, prefer to use model_urls instead.

Name
model_urls
Type
object
Description
Downloadable URL to the textured 3D model file generated by Meshy.

Name
glb
Type
string
Description
Downloadable URL to the GLB file.

Name
fbx
Type
string
Description
Downloadable URL to the FBX file.

Name
obj
Type
string
Description
Downloadable URL to the OBJ file.

Name
usdz
Type
string
Description
Downloadable URL to the USDZ file.

Name
thumbnail_url
Type
string
Description
Downloadable URL to the thumbnail image of the model file.

Name
progress
Type
integer
Description
Progress of the task. If the task is not started yet, this property will be 0. Once the task has succeeded, this will become 100.

Name
started_at
Type
timestamp
Description
Timestamp of when the task was started, in miliseconds. If the task is not started yet, this property will be 0.

A timestamp represents the number of milliseconds elapsed since January 1, 1970 UTC, following the RFC 3339 standard. For example, Friday, September 1, 2023 12:00:00 PM GMT is represented as 1693569600000. This applies to all timestamps in Meshy API.

Name
created_at
Type
timestamp
Description
Timestamp of when the task was created, in miliseconds.

Name
expires_at
Type
timestamp
Description
Timestamp of when the task result expires, in miliseconds.

Name
finished_at
Type
timestamp
Description
Timestamp of when the task was finished, in miliseconds. If the task is not finished yet, this property will be 0.

Name
status
Type
string
Description
Status of the task. Possible values are one of PENDING, IN_PROGRESS, SUCCEEDED, FAILED, EXPIRED.

Name
task_error
Type
object
Description
Error object that contains the error message if the task failed. The message property should be empty if the task succeeded.

Name
message
Type
string
Description
Detailed error message.

Name
texture_urls
Type
array
Description
An array of texture URL objects that are generated from the task. Normally this only contains one texture URL object. Each texture URL has the following properties:

If the task is created with art_style: "voxel", this property will be an empty list.

Name
base_color
Type
string
Description
Downloadable URL to the base color map image.

Name
metallic
Type
string
Description
Downloadable URL to the metallic map image.

If the task is created with enable_pbr: false, this property will be omitted.

Name
normal
Type
string
Description
Downloadable URL to the normal map image.

If the task is created with enable_pbr: false, this property will be omitted.

Name
roughness
Type
string
Description
Downloadable URL to the roughness map image.

If the task is created with enable_pbr: false, this property will be omitted.

Example Image To 3D Task Model
{
  "id": "018a210d-8ba4-705c-b111-1f1776f7f578",
  "model_urls": {
    "glb": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.glb?Expires=***",
    "fbx": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.fbx?Expires=***",
    "obj": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.obj?Expires=***",
    "usdz": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.usdz?Expires=***"
  },
  "thumbnail_url": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/preview.png?Expires=***",
  "progress": 1,
  "started_at": 1692771667037,
  "created_at": 1692771650657,
  "expires_at": 1692771679037,
  "finished_at": 1692771669037,
  "status": "SUCCEEDED",
  "texture_urls": [
    {
      "base_color": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/texture_0.png?Expires=***",
      "metallic": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/texture_0_metallic.png?Expires=XXX",
      "normal": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/texture_0_roughness.png?Expires=XXX",
      "roughness": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/texture_0_normal.png?Expires=XXX"
    }
  ]
}

Copy
Copied!
POST
/v1/image-to-3d
Create an Image To 3D Task
This endpoint allows you to create a new Image To 3D task. Refer to The Image To 3D Task Model to see which properties are included with Image To 3D task object.

Parameters
Required attributes
Name
image_url
Type
string
Description
Provide a downloadable URL or a base64-encoded data URI of the image for Meshy to use in model creation. We currently support .jpg, .jpeg, and .png formats.

Example of a data URI: data:image/jpeg;base64,<your base64-encoded image data>.

Optional attributes
Name
enable_pbr
Type
boolean
Description
Generate PBR Maps (metallic, roughness, normal) in addition to the base color. Default to true if not specified.

Name
ai_model
Type
string
Description
ID of the model to use. Default to meshy-4 if not specified. Available values:

meshy-4: equivalent to hard surface_mode
meshy-3: equivalent to organic surface_mode
Name
surface_mode
Type
string
Description
This field is deprecated and will be removed in the upcoming releases, please use ai_model instead.

Describe your desired surface mode. Default to organic if not specified. Available values:

organic
hard
Name
topology
Type
string
Description
Specify the topology of the generated model. Default to triangle if not specified. Available values:

quad: Generate a quad-dominant mesh.
triangle: Generate a decimated triangle mesh.
This parameter is effective only if ai_model is set to meshy-4.

Name
target_polycount
Type
integer
Description
Specify the target number of polygons in the generated model. The actual number of polygons may deviate from the target depending on the complexity of the geometry.

The valid value range varies depending on the user tier:

Premium users: 3,000 to 100,000 (inclusive)
Free users: 10,000 to 30,000 (inclusive)
Default to 30,000 if not specified.

This parameter is effective only if ai_model is set to meshy-4.

Returns
The result property of the response contains the task id of the newly created Image To 3D task.

Request
cURL
NodeJS
Python
POST
/v1/image-to-3d
curl https://api.meshy.ai/v1/image-to-3d \
  -X POST \
  -H "Authorization: Bearer ${YOUR_API_KEY}" \
  -H 'Content-Type: application/json' \
  -d '{
    "image_url": "<your publicly accessible image url or base64-encoded data URI>",
    "enable_pbr": true,
    "surface_mode": "hard"
  }'

 ## Using Data URI example
curl https://api.meshy.ai/v1/image-to-3d \
  -X POST \
  -H "Authorization: Bearer ${YOUR_API_KEY}" \
  -H 'Content-Type: application/json' \
  -d '{
    "image_url": "data:image/png;base64,${YOUR_BASE64_ENCODED_IMAGE_DATA}",
    "enable_pbr": true,
    "surface_mode": "hard"
  }'

Copy
Copied!
Response
{
  "result": "018a210d-8ba4-705c-b111-1f1776f7f578"
}

Copy
Copied!
GET
/v1/image-to-3d/:id
Retrieve an Image To 3D Task
This endpoint allows you to retrieve an Image To 3D task given a valid task id. Refer to The Image To 3D Task Model to see which properties are included with Image To 3D task object.

Parameters
Name
id
Type
path
Description
Unique identifier for the Image To 3D task to retrieve.

Returns
The response contains the Image To 3D task object. Check The Image To 3D Task Model section for details.

Request
cURL
NodeJS
Python
GET
/v1/image-to-3d/018a210d-8ba4-705c-b111-1f1776f7f578
curl https://api.meshy.ai/v1/image-to-3d/018a210d-8ba4-705c-b111-1f1776f7f578 \
  -H "Authorization: Bearer ${YOUR_API_KEY}"

Copy
Copied!
Response
{
  "id": "018a210d-8ba4-705c-b111-1f1776f7f578",
  "model_urls": {
    "glb": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.glb?Expires=***",
    "fbx": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.fbx?Expires=***",
    "obj": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.obj?Expires=***",
    "usdz": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/model.usdz?Expires=***"
  },
  "thumbnail_url": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/preview.png?Expires=***",
  "progress": 100,
  "started_at": 1692771667037,
  "created_at": 1692771650657,
  "expires_at": 1692771679037,
  "finished_at": 1692771669037,
  "status": "SUCCEEDED",
  "texture_urls": [
    {
      "base_color": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/texture_0.png?Expires=***",
      "metallic": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/texture_0_metallic.png?Expires=XXX",
      "normal": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/texture_0_roughness.png?Expires=XXX",
      "roughness": "https://assets.meshy.ai/***/tasks/018a210d-8ba4-705c-b111-1f1776f7f578/output/texture_0_normal.png?Expires=XXX"
    }
  ]
}